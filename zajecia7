#zadanie1

#!/usr/bin/env python
#encoding: utf-8

import sqlite3

connection=sqlite3.connect('example.db')
cursor=connection.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS test (id integer, title text, author text)''')

cursor.execute('''INSERT INTO test VALUES (1, 'teta ', 'Rollo')''')
cursor.execute('''INSERT INTO test VALUES (2, 'lele ', 'Bollo')''')
cursor.execute('''INSERT INTO test VALUES (3, 'hari pota ', 'Kollo')''')


for row in cursor.execute('SELECT * FROM test'):
    print row

connection.close()

#zadanie 2

#!/usr/bin/env python
#encoding: utf-8

import sqlite3

connection=sqlite3.connect('example.db')
cursor=connection.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS test (id integer, title text, author text)''')

cursor.execute('''INSERT INTO test VALUES (1, 'teta ', 'Rollo')''')
cursor.execute('''INSERT INTO test VALUES (2, 'lele ', 'Bollo')''')
cursor.execute('''INSERT INTO test VALUES (3, 'hari pota ', 'Kollo')''')


connection.rollback()


for row in cursor.execute('SELECT * FROM test'):
    print row

connection.close()


#zadanie3

#!/usr/bin/env python
#encoding: utf-8

from sqlalchemy import Column, Integer, String
from sqlalchemy.types import NUMERIC
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

Base=declarative_base()

class Test(Base):
    __tablename__='test'
    id=Column(Integer, primary_key=True)
    name=Column(String(100))
    value=Column(NUMERIC)
    
    
engine=create_engine('sqlite:///example.db', echo=True)

Base.metadata.create_all(engine)

Session=sessionmaker(bind=engine)
session=Session()


new_data=Test(
    id=1,
    name=u'hari pota',
    value=11
)

session.add(new_data)

#zadanie4

#!/usr/bin/env python
#encoding: utf-8

from sqlalchemy import Column, Integer, String
from sqlalchemy.types import NUMERIC
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

Base=declarative_base()

class Ksiazka(Base):
    __tablename__='book'
    id=Column(Integer, primary_key=True)
    name=Column(String(100))
    value=Column(NUMERIC)
    
class Student(Base):
    __tablename__='student'
    id=Column(Integer, primary_key=True)
    name=Column(String(100))
    book_id=Column(Integer)
    
class Bibliotekarz(Base):
    __tablename__='biblioteka'
    id=Column(Integer, primary_key=True)
    name=Column(String(100))
    bibliotekarz_id=Column(Integer)
    
    
engine=create_engine('sqlite:///example.db', echo=True)

Base.metadata.create_all(engine)

Session=sessionmaker(bind=engine)
session=Session()

new_data=Student(
    id=1,
    name=u'Karol',
    book_id=1
)

new_data2=Ksiazka(
    id=1,
    name=u'hari pota',
    value=22
)

new_data3=Bibliotekarz(
    id=1,
    name=u'Krzysztof',
    bibliotekarz_id=33
)
